name: Release

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

#  release:
#    types:
#      - published

jobs:
  build:
    name: Build Node.JS binding

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            compiler: gnu
            platform: unknown-linux
          - os: ubuntu-latest
            arch: aarch64
            node_arch: arm64
            compiler: gnu
            platform: unknown-linux
            build_dependencies:
              - gcc-aarch64-linux-gnu
          - os: ubuntu-latest
            arch: x86_64
            compiler: musl
            platform: unknown-linux
          - os: ubuntu-latest
            arch: aarch64
            node_arch: arm64
            compiler: musl
            platform: unknown-linux
            build_dependencies:
              - aarch64-linux-musl-gcc
          - os: macos-11
            arch: x86_64
            platform: apple-darwin
          - os: macos-11
            arch: aarch64
            node_arch: arm64
            platform: apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Install NPM deps
        run: npm ci

#      - name: Run tests
#        run: npm test

      - name: Set target name
        uses: actions/github-script@v5
        id: set-target
        with:
          script: |
            let target = '${{ matrix.arch }}-${{ matrix.platform }}';
            if ('${{ matrix.compiler }}') {
              target += `-${{ matrix.compiler }}`;
            }
            
            core.info(`Set target ${target}`);
            
            return target;
          result-encoding: string

      - name: Install build deps
        if: ${{ matrix.os == "ubuntu-latest" && matrix.build_dependencies && matrix.build_dependencies[0] }}
        run: |
          sudo apt-get update
          sudo apt-get install ${{ join(matrix.build_dependencies, ' ') }}

      - name: Add build target
        run: rustup target add ${{ steps.set-target.outputs.result }}

      - name: Build
        run: npm run build:release -- --target ${{ steps.set-target.outputs.result }}
        env:
          LIBC: ${{ matrix.compiler == 'musl' }}
          ARCH: ${{ matrix.node_arch }} # Overwrite current arch with target one
          RUSTFLAGS: "-C target-feature=-crt-static" # Musl build doesn't work with this feature

      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v2
        with:
          name: prebuilds
          path: node-grove/prebuilds/

  publish:
    name: Publish NPM Package
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
#
#      - name: Check package version matches tag
#        uses: geritol/match-tag-to-package-version@0.2.0
#        env:
#          TAG_PREFIX: v
#
      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM deps
        run: npm ci

      - name: Download prebuild artifacts
        uses: actions/download-artifact@v2
        with:
          name: prebuilds
          path: node-grove/prebuilds

      - name: Check prebuilds
        run: ls -laR prebuilds

#      - name: NPM Publish
#        run: npm publish --access public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}